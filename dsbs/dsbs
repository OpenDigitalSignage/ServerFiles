#!/bin/bash

#############################################
# DSBS - Digital Signage Background Schedule
#
# ctime:   2016-08-25 /TR
# mtime:   2016-08-26 /TR
# version: 0.5
#
# -> run it via cron like this:
# */1 * * * * /usr/sbin/dsbs "dsb1"
# */1 * * * * /usr/sbin/dsbs "dsb-xxl"
#############################################

if [ -z $1 ]; then
  echo "Need exact one parameter!"
  exit 1
fi

SMB_PREFIX="/home/dsb"
WEB_PREFIX="/var/www/html/dsb"
USRGRP="dsb.dsb"

SMB="$SMB_PREFIX/$1"
WEB="$WEB_PREFIX/$1/status.txt"

# extra checks
[ ! -d "$SMB" ] && exit
touch $WEB
[ ! $? ] && exit

# parse dsbs ini file, create 4 arrays
read_dsbs() {
  local i
  while IFS=$'' read var; do
    # section found
    if [[ $var == \[*\] ]]; then
      section=$var
      i=0
      continue
    fi
    # check for valid entry
    case $var in
    [0-9]*=1*)
      case $section in
      "[Weekplan]")
        WEEKPLAN[$i]=${var#*|}
        i=$((i+1))
        ;;
      "[Offtimes]")
        OFFTIMES[$i]=${var#*|}
        i=$((i+1))
        ;;
      "[Events]")
        EVENTS[$i]=${var#*|}
        i=$((i+1))
        ;;
      "[Macs]")
        MACS[$i]=$var
        i=$((i+1))
        ;;
      esac
      # echo "var=$var, sektion=$section, i=$i"
      ;;
    esac
  done < "$1"
}

wakeup_screens_etherwake() {
  NETDEVS=`cat /proc/net/dev | grep "eth"| cut -d: -f1`
  for i in ${!MACS[@]}; do
    str=${MACS[$i]}
    str=${str#*|}
    mac=${str:0:17}
    for dev in ${NETDEVS[@]}; do
      $ETHERWAKE -i "$dev" "$mac"
      $ETHERWAKE -i "$dev" "$mac"
    done
  done
}

wakeup_screens_wol() {
  for i in ${!MACS[@]}; do
    # 3=1|12:34:56:78:90:ef|DSB Lehrerzimmer
    str=${MACS[$i]}
    str=${str#*|}
    mac=${str:0:17}
    wol $mac
    wol $mac
  done
}

# ON|MAC|Beschreibung
# [Macs]
wakeup_screens() {
  export PATH="/sbin:/bin:/usr/sbin:/usr/bin"

  # check layout link
  old_layout=`readlink "$SMB/Layout.dsbd"`
  echo "old_layout = $old_layout"
  echo "cl_layout = $cl_layout"
  if [ "x$cl_layout.dsbd" != "x$old_layout" ]; then
    rm -f "$SMB/Layout.dsbd"
    ln -s "$cl_layout.dsbd" "$SMB/Layout.dsbd"
  fi

  # wol via ether-wake
  ETHERWAKE=`which ether-wake`
  if [ ! -z $ETHERWAKE ]; then
    wakeup_screens_etherwake
    return 0
  fi

  # wol via wol tool
  WOL=`which wol`
  if [ ! -z $WOL ]; then
    wakeup_screens_wol
    return 0
  fi
}

# ON|YYYYmmdd|HHMM-HHMM|Layout|Beschreibung
function set_event() {
  cat <<EOF > $WEB
SHUTDOWN=0
NOTE=$cl_note
LAYOUT=$cl_layout
TIME=$cl_time
DATE=$cl_date
EOF
  wakeup_screens
  exit
}

function set_offtime() {
  cat <<EOF > $WEB
SHUTDOWN=1
NOTE=$cl_note
DATE1=$cl_date1
DATE2=$cl_date2
EOF
  exit
}

function set_weekplan() {
  cat <<EOF > $WEB
SHUTDOWN=0
NOTE=weekplan
LAYOUT=$cl_layout
TIME=$cl_time
DOW=$cl_dow
EOF
  wakeup_screens
  exit
}

# arrays @ schedule ini
declare -A "WEEKPLAN" "OFFTIMES" "EVENTS" "MACS"

# convert to unix format, leave it in the end for error checking...
INI="/tmp/schedule-$$.ini"
exec 1> /tmp/dsbs.log
exec 2> /tmp/dsbs.err
cat "$SMB/DS-Schedule.dsbs" | dos2unix \
  | iconv -f Latin1 -t utf8 > "$INI"

# read arrays
read_dsbs "$INI"
rm -f "$INI"

# read current date, time and day of week
DATETIME=`date +%u%Y%m%d%H%M`
DOW=${DATETIME:0:1}
TODAY=${DATETIME:1:8}
CTIME=${DATETIME:9:4}

######################################################################
# 1) check events
for x in ${!EVENTS[@]}; do
  # 20170130|1100-1200|Layout2|Admin Day
  str=${EVENTS[$x]}
  cl_date=${str:0:8}
  if [ "x$cl_date" = "x$TODAY" ]; then
    str=${str#*|}
    cl_time=${str:0:9}
    cl_time1=${str:0:4}
    cl_time2=${str:5:4}
    if [ $CTIME -ge $cl_time1 -a $CTIME -le $cl_time2 ]; then
      str=${str#*|}
      cl_layout=${str%|*}
      cl_note=${str#*|}
      set_event
    fi
  fi
done

######################################################################
# 2) check offtimes
for x in ${!OFFTIMES[@]}; do
  # YYYYmmdd-YYYYmmdd|Beschreibung
  str=${OFFTIMES[$x]}
  cl_date1=${str:0:8}
  cl_date2=${str:9:8}
  if [ $TODAY -ge $cl_date1 -a $TODAY -le $cl_date2 ]; then
    cl_note=${str#*|}
    set_offtime
  fi
done

######################################################################
# 3) check weekplan
for x in ${!WEEKPLAN[@]}; do
  # 5|0730-1230|Layout1
  str=${WEEKPLAN[$x]}
  cl_dow=${str:0:1}
  if [ "x$cl_dow" = "x$DOW" ]; then
    str=${str#*|}
    cl_time=${str:0:9}
    cl_time1=${str:0:4}
    cl_time2=${str:5:4}
    if [ $CTIME -ge $cl_time1 -a $CTIME -le $cl_time2 ]; then
      cl_layout=${str#*|}
      set_weekplan
    fi
  fi
done

# default, shutdown the screen!
cl_note="nothing scheduled, shutdown"
cl_date1=$TODAY
cl_date2=$TODAY
set_offtime
